package telas;

import enums.Estado;
import excecoes.PersonalCollectionsException;
import excecoes.ValidacaoException;
import gerenciador.Gerenciador;
import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.text.JTextComponent;
import tipos.Midia;
import util.Validacao;

/**
 * Tela cadastro de Mídia
 *
 * @author Douglas Rafael
 */
public class TelaCadastroMidia extends javax.swing.JDialog {

    private final String STRCADASTRAR = "Cadastrar";
    private final String STRATUALIZAR = "Atualizar";
    private static int id;

    private Gerenciador manager;

    /**
     * Creates new form TelaCadastroMidia
     *
     * @param parent
     * @param modal
     * @param idMidia
     */
    public TelaCadastroMidia(java.awt.Frame parent, boolean modal, int idMidia) {
        super(parent, modal);

        manager = new Gerenciador();
        initComponents();
        // Se vier do contrutor um id é porque os dados deverão ser atualizados
        if (idMidia > 0) {
            montaAlterarDados(idMidia);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        group_assistido = new javax.swing.ButtonGroup();
        panelPrincipal = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tf_titulo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cb_estado = new javax.swing.JComboBox();
        rb_nao = new javax.swing.JRadioButton();
        rb_sim = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tf_obs = new javax.swing.JTextArea();
        bt_inserir = new javax.swing.JButton();
        bt_cancelar = new javax.swing.JButton();
        sp_nota = new javax.swing.JSpinner();
        tf_preco = new javax.swing.JFormattedTextField();
        tf_data_compra = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tf_conteudo = new javax.swing.JTextArea();
        tf_marca = new javax.swing.JTextField();
        bt_deletar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Mídias (CD/DVD/Blu-Ray...)");
        setIconImage(new ImageIcon("images/logo.png").getImage());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                fecharJanela(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Título");

        tf_titulo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tf_titulo.setMargin(new java.awt.Insets(2, 5, 2, 2));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Marca");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Data de Compra");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Já foi Assistido?");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Preço");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Estado");

        cb_estado.setModel(new DefaultComboBoxModel(Estado.values()));

        group_assistido.add(rb_nao);
        rb_nao.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rb_nao.setSelected(true);
        rb_nao.setText("Não");

        group_assistido.add(rb_sim);
        rb_sim.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rb_sim.setText("Sim");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Nota do Item");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Observações");

        tf_obs.setColumns(20);
        tf_obs.setRows(5);
        tf_obs.setMargin(new java.awt.Insets(2, 5, 2, 2));
        jScrollPane1.setViewportView(tf_obs);

        bt_inserir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        bt_inserir.setText("Cadastrar");
        bt_inserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acao(evt);
            }
        });

        bt_cancelar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        bt_cancelar.setText("Cancelar");
        bt_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelar(evt);
            }
        });

        sp_nota.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        sp_nota.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), Float.valueOf(10.0f), Float.valueOf(1.0f)));

        tf_preco.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        tf_preco.setMargin(new java.awt.Insets(2, 5, 2, 2));

        try {
            tf_data_compra.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tf_data_compra.setMargin(new java.awt.Insets(2, 5, 2, 2));

        jLabel12.setText("Conteúdo");

        tf_conteudo.setColumns(20);
        tf_conteudo.setRows(5);
        tf_conteudo.setMargin(new java.awt.Insets(2, 5, 2, 2));
        jScrollPane2.setViewportView(tf_conteudo);

        tf_marca.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tf_marca.setMargin(new java.awt.Insets(2, 5, 2, 2));

        bt_deletar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        bt_deletar.setText("Deletar");
        bt_deletar.setEnabled(false);
        bt_deletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeMidia(evt);
            }
        });

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(tf_titulo, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tf_marca)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bt_cancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bt_deletar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bt_inserir))
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(panelPrincipalLayout.createSequentialGroup()
                                .addComponent(rb_sim)
                                .addGap(18, 18, 18)
                                .addComponent(rb_nao))
                            .addComponent(tf_data_compra, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sp_nota, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel8)
                            .addComponent(tf_preco, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9)
                            .addComponent(cb_estado, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel11))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_marca, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelPrincipalLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tf_preco, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelPrincipalLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cb_estado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addGap(6, 6, 6)
                        .addComponent(sp_nota, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelPrincipalLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(39, 39, 39)
                                .addComponent(jLabel7))
                            .addGroup(panelPrincipalLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(tf_data_compra, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rb_sim)
                            .addComponent(rb_nao))))
                .addGap(3, 3, 3)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_inserir)
                    .addComponent(bt_cancelar)
                    .addComponent(bt_deletar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void fecharJanela(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_fecharJanela
        this.dispose();
        new TelaItens(null, true).setVisible(true);
    }//GEN-LAST:event_fecharJanela

    private void cancelar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelar
        fecharJanela(null);
    }//GEN-LAST:event_cancelar

    /**
     * Verifica se à ação é de inserção ou atualização
     *
     * @param evt
     */
    private void acao(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acao
        try {
            if (Validacao.validarCamposVazios(panelPrincipal, getCamposValidar())) {
                throw new ValidacaoException("O prenechimento dos seguintes campos são obrigatórios:\nTítulo");
            } else {
                Midia midia = getMidiaInterface();
                if (midia != null) {
                    if (isInsert()) {
                        inserir(midia);
                    } else if (isUpadate()) {
                        atualizar(midia);
                    }
                }
            }
        } catch (ValidacaoException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Problema na validação", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_acao

    /**
     * remove a mídia
     *
     * @param evt
     */
    private void removeMidia(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeMidia
        try {
            if (getId() > 0) {
                int opcao = JOptionPane.showConfirmDialog(null, "Deseja realmente remover o item: " + tf_titulo.getText() + "?", "Deletar item", JOptionPane.YES_NO_OPTION);
                if (opcao == JOptionPane.YES_OPTION) {
                    if (!manager.removerMidia(getId())) {
                        throw new PersonalCollectionsException("Não foi possível remover o item: " + tf_titulo.getText());
                    } else {
                        JOptionPane.showMessageDialog(null, "Item removido com sucesso!", "Remorção", JOptionPane.INFORMATION_MESSAGE);
                        fecharJanela(null);
                    }
                }
            }
        } catch (PersonalCollectionsException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Problema na exclusão!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_removeMidia

    /**
     * Insere o o item
     *
     * @param midia
     */
    private void inserir(Midia midia) {
        try {
            manager.inserirItem(midia);
            JOptionPane.showMessageDialog(null, "Item insirido com sucesso!", "Inserção", JOptionPane.INFORMATION_MESSAGE);
            limpaCampos();
            tf_titulo.grabFocus();
        } catch (PersonalCollectionsException ex) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro ao tentar inserir o item", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Atualiza os dados do item
     *
     * @param midia
     */
    private void atualizar(Midia midia) {
        try {
            manager.atualizarItem(midia);
            JOptionPane.showMessageDialog(null, "Item atualizado com sucesso!", "Atualização", JOptionPane.INFORMATION_MESSAGE);
            fecharJanela(null);
        } catch (PersonalCollectionsException ex) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro ao tentar atualizar o item", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Verifica se o estado do form é de inserção
     *
     * @return
     */
    public boolean isInsert() {
        return bt_inserir.getText().equals(STRCADASTRAR);
    }

    /**
     * Verifica se o estado do form é de atualização
     *
     * @return
     */
    public boolean isUpadate() {
        return bt_inserir.getText().equals(STRATUALIZAR);
    }

    /**
     * Retorna o valor de id, o qual é uma variavel static da classe
     *
     * @return int
     */
    public int getId() {
        return TelaCadastroMidia.id;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroMidia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroMidia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroMidia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroMidia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaCadastroMidia dialog = new TelaCadastroMidia(new javax.swing.JFrame(), true, 0);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    /**
     * Monta o objeto Mídia com os dados oriundos da interface
     *
     * @return Mídia
     */
    private Midia getMidiaInterface() {
        String titulo = tf_titulo.getText();
        String marca = tf_marca.getText();
        String conteudo = tf_conteudo.getText();
        String dataCompra = (tf_data_compra.getValue() != null) ? (String) tf_data_compra.getValue() : "";
        Double precoDeCompra = (tf_preco.getValue() != null) ? Double.parseDouble(String.valueOf(tf_preco.getValue())) : 0.0;
        Estado estado = (Estado) cb_estado.getSelectedItem();
        boolean assistido = rb_sim.isSelected() ? true : false;
        Double nota = (sp_nota.getValue() != null) ? Double.parseDouble(String.valueOf(sp_nota.getValue())) : 0.0;
        String observacao = tf_obs.getText();

        // Se não for inserir é atualizar ou deletar
        if (isInsert()) {
            return new Midia(titulo, observacao, dataCompra, precoDeCompra, 0, nota, estado, false, marca, conteudo, assistido);
        } else {
            return new Midia(getId(), titulo, observacao, dataCompra, precoDeCompra, 0, nota, estado, false, marca, conteudo, assistido);
        }
    }

    /**
     * Monta a interface com os dados para atualização
     *
     * @param idMidia
     */
    private void montaAlterarDados(int idMidia) {
        try {
            Midia midia = manager.pesquisarMidia(idMidia);
            if (midia != null) {
                bt_deletar.setEnabled(true); // habilita o botao deletar
                TelaCadastroMidia.id = midia.getId(); // seta o valor do id para variavel static 
                bt_inserir.setText("Atualizar");

                tf_titulo.setText(midia.getTitulo());
                tf_marca.setText(midia.getMarca());
                tf_conteudo.setText(midia.getConteudo());
                tf_data_compra.setText(midia.getDataDeCompra());
                tf_preco.setValue(midia.getPrecoDeCompra());
                cb_estado.setSelectedItem(midia.getEstado());
                sp_nota.setValue(midia.getNota());
                tf_obs.setText(midia.getObservacao());
                if (midia.isAssistido()) {
                    rb_sim.setSelected(true);
                }
            }
        } catch (PersonalCollectionsException ex) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro ao tentar montar os dados do item para atualização", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Retorna os campos que devem ser validados (obrigatórios)
     *
     * @return Lista com os components
     */
    public List<Component> getCamposValidar() {
        List<Component> components = new ArrayList<>();
        components.add(tf_titulo);
        return components;
    }

    /**
     * Limpa todos os campos
     */
    private void limpaCampos() {
        Component components[] = panelPrincipal.getComponents();
        for (Component component : components) {
            if (component instanceof JTextComponent) {
                ((JTextField) component).setText("");
            }
        }
        tf_conteudo.setText("");
        cb_estado.setSelectedIndex(0);
        sp_nota.setValue(0);
        tf_obs.setText("");
        rb_nao.setSelected(true);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_cancelar;
    private javax.swing.JButton bt_deletar;
    private javax.swing.JButton bt_inserir;
    private javax.swing.JComboBox cb_estado;
    private javax.swing.ButtonGroup group_assistido;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JRadioButton rb_nao;
    private javax.swing.JRadioButton rb_sim;
    private javax.swing.JSpinner sp_nota;
    private javax.swing.JTextArea tf_conteudo;
    private javax.swing.JFormattedTextField tf_data_compra;
    private javax.swing.JTextField tf_marca;
    private javax.swing.JTextArea tf_obs;
    private javax.swing.JFormattedTextField tf_preco;
    private javax.swing.JTextField tf_titulo;
    // End of variables declaration//GEN-END:variables
}
